<?php

/**
 * @file
 * Contains mollo_press.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_help().
 */
function mollo_press_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the mollo_press module.
    case 'help.page.mollo_press':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Artist Module for Mollo Events') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function mollo_press_theme() {
  return [
    'mollo_press' => [
      'render element' => 'children',
    ],
  ];
}


function mollo_press_form_alter(&$form, &$form_state, $form_id) {

  // Show Menu with Names on List Filter
  if ($form['#id'] === 'views-exposed-form-mollo-press-admin-list' ||
    $form['#id'] === 'views-exposed-form-mollo-press-visitor-list'

  ) {


    $nids = \Drupal::entityQuery('node')
      ->condition('type', 'mollo_event')
      ->execute();
    $nodes = Node::loadMultiple($nids);
    $options_id = ['' => '-- Alle --']; // TODO Add Translation

    foreach ($nodes as $key => $node) {
      $value = $node->get('field_mollo_name')->getString();
      $nid = $node->id();

      if (isset($value)) {
        $options_id[$nid] = $value;
      }
    }

    if (isset($form['event'])) {
      $form['event']['#type'] = 'select';
      $form['event']['#options'] = $options_id;
      $form['event']['#size'] = 1;
    }

  }
}
